{"version":3,"file":"main.49513d8979f18606f446.hot-update.js","sources":["webpack:///src/client/pages/App.js","webpack:///src/client/pages/app/Controls.js","webpack:///src/client/pages/app/GetLink.js","webpack:///src/client/pages/app/GetLinkPopup.js","webpack:///src/client/pages/app/OSSelect.js","webpack:///src/client/pages/app/Pin.js","webpack:///src/client/pages/app/Shortcut.js","webpack:///src/client/pages/app/ShortcutItem.js","webpack:///src/client/pages/app/ShortcutList.js","webpack:///external \"babel-runtime/helpers/slicedToArray\""],"sourcesContent":["import React, { useContext } from \"react\" // eslint-disable-line no-unused-vars\r\nimport DataContext from \"../DataContext\"\r\n\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport FirstTimeMessage from \"./\"\r\nimport ShortcutList from \"./app/ShortcutList\"\r\nimport Controls from \"./app/Controls\"\r\nimport { encodeAppName } from \"../helpers\"\r\n\r\nconst App = () => {\r\n  const { app, os, firstTimeMessage } = useContext(DataContext)\r\n\r\n  const encodedName = encodeAppName(app.name)\r\n  return (\r\n    <div>      \r\n      <Controls icon={encodedName + \".png\"} name={app.name} />\r\n      { firstTimeMessage && <FirstTimeMessage/>}\r\n      <ResultsContainer>\r\n        {app.sections.map(section => {\r\n          const shortcuts = app.shortcuts.filter(\r\n            e => e.sectionId.toString() === section._id.toString() && e[os]\r\n          )\r\n\r\n          if (shortcuts.length === 0) return undefined\r\n\r\n          return (\r\n            <ShortcutList\r\n              key={section._id}\r\n              shortcuts={shortcuts}\r\n              title={section.name}\r\n            />\r\n          )\r\n        })}\r\n      </ResultsContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nconst ResultsContainer = styled.div`\r\n  columns: 2;\r\n  column-gap: 30px;\r\n\r\n  @media (max-width: 1122px) {\r\n    columns:1;\r\n  }\r\n`\r\n","import React, { useContext, useState } from \"react\" // eslint-disable-line no-unused-vars\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport { copyToClipboard } from \"../../helpers\"\r\nimport DataContext from \"../../DataContext\"\r\nimport OSSelect from \"./OSSelect\"\r\nimport GetLink from \"./GetLink\"\r\nimport { getLink } from \"../../helpers/api\"\r\n\r\nconst Controls = ({ icon, name }) => {\r\n  const { app, os, doSetOs } = useContext(DataContext)\r\n  const [publicLink, setPublicLink] = useState()\r\n\r\n  async function handleGetLink() {\r\n    const shortcutIds = app.shortcuts.filter(e => e.isPinned).map(e => e._id)\r\n    const link = await getLink(app._id, shortcutIds).then(data => data.text())\r\n    setPublicLink(link)\r\n    copyToClipboard(link)\r\n  }\r\n\r\n  function handleGetLinkClose() {\r\n    setPublicLink()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <NameWrapper>\r\n        <Icon src={\"/logos/\" + icon} />\r\n        <Name>{name}</Name>\r\n      </NameWrapper>\r\n      <SearchWrapper />\r\n      <OSSelect onSelect={doSetOs} os={os} oss={app.oss} />\r\n      <Seperator />\r\n      <GetLink\r\n        onGetLink={handleGetLink}\r\n        onClose={handleGetLinkClose}\r\n        link={publicLink}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n\r\nconst Seperator = styled.div`\r\n  height: 39px;\r\n  border-left: solid 1px #5a5a5a;\r\n  margin: 0 20px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin: 60px 0 40px 0;\r\n  border-bottom: solid 1px #5a5a5a;\r\n  position: sticky;\r\n  top: 0;\r\n  background: linear-gradient(#3c1b1b, #371616) no-repeat;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 30px 0 20px 0;\r\n  }\r\n`\r\n\r\nconst NameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst Icon = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  transition: all 0.5s;\r\n\r\n  @media (max-width: 992px) {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 25px;\r\n    height: 25px;\r\n    margin-bottom: 4px;\r\n  }\r\n`\r\n\r\nconst Name = styled.h1`\r\n  font-size: 40px;\r\n  margin-left: 20px;\r\n  font-weight: 200;\r\n  line-height: normal;\r\n\r\n  transition: all 0.5s;\r\n\r\n  @media (max-width: 992px) {\r\n    font-size: 25px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n  margin-right: 20px;\r\n  margin-left: auto;\r\n`\r\n","import React, { useEffect, useRef } from \"react\" // eslint-disable-line no-unused-vars\r\n\r\nimport Button from \"../../components/Button\"\r\nimport GetLinkPopup from \"./GetLinkPopup\"\r\n\r\nconst GetLink = ({ link, onGetLink, onClose }) => {\r\n  const popupElm = useRef(null)\r\n\r\n  function handleClickAway(e) {\r\n    if (popupElm.current && !popupElm.current.contains(e.target)) onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickAway)\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickAway)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={onGetLink}>\r\n        <i className=\"fas fa-link\" />\r\n        &nbsp; Get Link\r\n      </Button>\r\n      {link && <GetLinkPopup link={link} ref={popupElm} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetLink\r\n","import React from \"react\" // eslint-disable-line no-unused-vars\r\nimport styled from \"@emotion/styled\"\r\n\r\nconst GetLinkPopup = React.forwardRef((props, ref) => {\r\n  return (\r\n    <Container ref={ref}>\r\n      <b>Done! </b>\r\n      <Text>\r\n        Your selected shortcuts are saved with this link. You can share it with\r\n        friends or save it for future reference.\r\n      </Text>\r\n      <InputWrapper>\r\n        <Input\r\n          type=\"text\"\r\n          value={props.link}\r\n          onFocus={event => event.target.select()}\r\n          readOnly\r\n        />\r\n        <br />\r\n        <small>Link copied to clipboard</small>\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n})\r\n\r\nexport default GetLinkPopup\r\n\r\nconst Container = styled.div`\r\n  background: #2e2424;\r\n  max-width: 300px;\r\n  padding: 20px;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 7px 23px 10px rgba(0, 0, 0, 0.4);\r\n\r\n  position: absolute;\r\n  right: 0;\r\n  top: 64px;\r\n\r\n  :after {\r\n    left: 80%;\r\n    margin-left: -4px;\r\n    top: -10px;\r\n    border-bottom: 10px solid #2e2424;\r\n    display: block;\r\n    position: absolute;\r\n    right: 20px;\r\n    vertical-align: middle;\r\n    content: \"\";\r\n    border-left: 8px solid transparent;\r\n    border-right: 8px solid transparent;\r\n    border-style: none double solid;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  small {\r\n    color: #9d8b8b;\r\n  }\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 6px;\r\n  border: solid 1px #423737;\r\n  color: #ffe6ab;\r\n  background: #261d1d;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  width: 100%;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  margin: 20px 0 10px;\r\n`\r\n\r\nconst Text = styled.div`\r\n  font-weight: 300;\r\n`\r\n\r\n// const Seperator = styled.hr`\r\n//   border: 0;\r\n//   border-top: 1px solid #453a3a;\r\n// `\r\n","import React, { useEffect } from \"react\" // eslint-disable-line no-unused-vars\r\nimport styled from \"@emotion/styled\"\r\n\r\nfunction OSSelect({ oss, os, onSelect }) {\r\n  return (\r\n    <Container>\r\n      <OSButton\r\n        buttonOS=\"win\"\r\n        selectedOS={os}\r\n        supportedOSS={oss}\r\n        onClick={onSelect}\r\n      />\r\n      <OSButton\r\n        buttonOS=\"mac\"\r\n        selectedOS={os}\r\n        supportedOSS={oss}\r\n        onClick={onSelect}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst OSButton = ({ buttonOS, selectedOS, supportedOSS, onClick }) => {\r\n  const SELECTED_COLOR = \"#E9E5E5\"\r\n  const UNSELECTED_COLOR = \"#5A5A5A\"\r\n  const iconName = buttonOS === \"mac\" ? \"apple\" : \"windows\"\r\n\r\n  return (\r\n    supportedOSS.includes(buttonOS) && (\r\n      <i\r\n        className={\"fab fa-\" + iconName}\r\n        style={{\r\n          color: selectedOS === buttonOS ? SELECTED_COLOR : UNSELECTED_COLOR,\r\n          cursor: selectedOS === buttonOS ? \"default\" : \"pointer\",\r\n        }}\r\n        onClick={() =>\r\n          selectedOS === buttonOS ? undefined : onClick(buttonOS)\r\n        }\r\n      />\r\n    )\r\n  )\r\n}\r\nexport default OSSelect\r\n\r\nconst Container = styled.span`\r\n  font-size: 30px;\r\n  i + i {\r\n    margin-left: 20px;\r\n  }\r\n`\r\n","import React from \"react\" // eslint-disable-line no-unused-vars\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport { lightenDarkenColor } from \"../../helpers\"\r\n\r\nexport default function Shortcut({ pins, isPinned, onClick }) {\r\n  return (\r\n    <Container isPinned={isPinned} onClick={onClick}>\r\n      <IconWrapper>\r\n        {isPinned ? (\r\n          <img src=\"/pin-on.svg\" alt=\"\" />\r\n        ) : (\r\n          <img src=\"/pin-off.svg\" alt=\"\" />\r\n        )}\r\n      </IconWrapper>\r\n      <Count isPinned={isPinned}>{pins}</Count>\r\n    </Container>\r\n  )\r\n}\r\n\r\nShortcut.propTypes = {\r\n  pins: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  isPinned: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n  border: solid 1px ${({ isPinned }) => (isPinned ? \"#ffe6ab\" : \"#9D8B8B\")};\r\n  border-radius: 3px;\r\n  padding: 5px 0 3px;\r\n  cursor: pointer;\r\n  vertical-align: middle;\r\n  user-select: none;\r\n\r\n  img {\r\n    height: 12px;\r\n  }\r\n\r\n  :hover {\r\n    border-color: ${({ isPinned }) => (isPinned ? lightenDarkenColor(\"#ffe6ab\", 50) : lightenDarkenColor(\"#9D8B8B\", 50))};\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled.span`\r\n  line-height: 11px;\r\n  margin-left: 7px;\r\n`\r\n\r\nconst Count = styled.span`\r\n  font-size: 11px;\r\n  color: ${({ isPinned }) => (isPinned ? \"#ffe6ab\" : \"#E9E5E5\")};\r\n  margin: 0 auto;\r\n  padding: 0 6px;\r\n  line-height: 10px;\r\n`\r\n","import React, { Fragment } from \"react\" // eslint-disable-line no-unused-vars\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport { upperFirstLetter } from \"../../helpers\"\r\n\r\nfunction split(keysArr, seperator) {\r\n  const newArr = []\r\n  for (const item1 of keysArr) {\r\n    const item1Split = item1.split(seperator)\r\n    for (let i = 0; i < item1Split.length; i++) {\r\n      newArr.push(item1Split[i].trim())\r\n\r\n      // dont add seperator after last element\r\n      if (i !== item1Split.length - 1) {\r\n        newArr.push(seperator)\r\n      }\r\n    }\r\n  }\r\n\r\n  return newArr\r\n}\r\n\r\nexport default function Shortcut({ keys, isHtml }) {\r\n  if (isHtml)\r\n    return (\r\n      <Container\r\n        dangerouslySetInnerHTML={{ __html: prepareHtml(keys) }}\r\n        isHtml={isHtml}\r\n      />\r\n    )\r\n\r\n  let keysArr = split([keys], \" or \")\r\n\r\n  return keysArr.map((e, index) => (\r\n    <div key={index}>\r\n      <ShortcutOption keys={e} />{\" \"}\r\n    </div>\r\n  ))\r\n}\r\n\r\nfunction prepareHtml(html) {\r\n  let isEnding = false\r\n\r\n  while (html.includes(\"**\")) {\r\n    html = html.replace(\"**\", isEnding ? \"</kbd>\" : \"<kbd>\")\r\n    isEnding = !isEnding\r\n  }\r\n\r\n  return upperFirstLetter(html)\r\n}\r\n\r\nfunction ShortcutOption({ keys }) {\r\n  let keysArr = split([keys], \"+\")\r\n  keysArr = split(keysArr, \"|\")\r\n  keysArr = split(keysArr, \"..\")\r\n  keysArr = split(keysArr, \" \")\r\n\r\n  return (\r\n    <Container>\r\n      {keysArr.map((key, index) => {\r\n        let numpad\r\n        if (key.includes(\"numpad\")) {\r\n          key = key.replace(\"numpad\", \"\")\r\n          numpad = \" Numpad \"\r\n        }\r\n        let toRender\r\n\r\n        key = key.toLowerCase()\r\n\r\n        switch (key) {\r\n          case \"arrows\":\r\n          case \"+\":\r\n          case \"..\":\r\n            return <Spacer key={index}>{key}</Spacer>\r\n          case \" \":\r\n            return <Then key={index}>then</Then>\r\n          case \"or\":\r\n            return (\r\n              <div key={index} className=\"kbn-or\">\r\n                or\r\n              </div>\r\n            )\r\n          case \"plus\":\r\n            toRender = <kbd key={index}>+</kbd>\r\n            break\r\n          case \"|\":\r\n            return <Spacer key={index}>/</Spacer>\r\n          case \"up\":\r\n          case \"down\":\r\n          case \"left\":\r\n          case \"right\":\r\n            toRender = (\r\n              <kbd key={index}>\r\n                <i className={`fas fa-long-arrow-alt-${key}`} />\r\n              </kbd>\r\n            )\r\n            break\r\n          default:\r\n            toRender = <kbd key={index}>{upperFirstLetter(key)}</kbd>\r\n            break\r\n        }\r\n        return (\r\n          <Fragment key={index}>\r\n            {numpad && <Spacer>numpad</Spacer>}\r\n            {toRender}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Container>\r\n  )\r\n}\r\n\r\nShortcut.propTypes = {\r\n  keys: PropTypes.string.isRequired,\r\n}\r\n\r\nconst Spacer = styled.div`\r\n  margin: 0 3px;\r\n`\r\n\r\nconst Then = styled.div`\r\n  font-style: italic;\r\n  margin: 0 3px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: ${props => (props.isHtml ? \"block\" : \"inline-flex\")};\r\n  flex-wrap: wrap;\r\n  font-size: 14px;\r\n  color: #e9e5e5;\r\n\r\n  kbd {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .kbn-or {\r\n    padding: 1px 10px;\r\n  }\r\n`\r\n","import React, { Fragment, useContext, useState } from \"react\" // eslint-disable-line no-unused-vars\r\nimport styled from \"@emotion/styled\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport DataContext from \"../../DataContext\"\r\nimport { pin } from \"../../helpers/api\"\r\nimport { upperFirstLetter } from \"../../helpers\"\r\nimport Shortcut from \"./Shortcut\"\r\nimport Pin from \"./Pin\"\r\n\r\nfunction ShortcutItem({ id, action, keys, pins, isPinned, isHtml, note }) {\r\n  const { app, doPin } = useContext(DataContext)\r\n  const [pinsState, setPinsState] = useState(pins)\r\n  const [infoVisible, setInfoVisible] = useState(false)\r\n  const [isPinnedState, setIsPinnedState] = useState(isPinned)\r\n\r\n  async function handlePin() {\r\n    const newPins = isPinnedState ? pins : pins + 1\r\n    const newIsPinned = !isPinnedState\r\n    setPinsState(newPins)\r\n    setIsPinnedState(newIsPinned)\r\n\r\n    doPin(id, newPins, newIsPinned)\r\n    await pin(app._id, id, newIsPinned)\r\n\r\n    // if (user) {\r\n    // } else {\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PinContainer>\r\n        <Pin isPinned={isPinnedState} pins={pinsState} onClick={handlePin} />\r\n      </PinContainer>\r\n      <ActionContainer isPinned={isPinnedState}>\r\n        {upperFirstLetter(action)}\r\n        {note && (\r\n          <InfoIcon\r\n            className=\"fas fa-info\"\r\n            onClick={() => setInfoVisible(!infoVisible)}\r\n          />\r\n        )}\r\n        {infoVisible && <InfoContainer>{note}</InfoContainer>}\r\n      </ActionContainer>\r\n      <KeysContainer>\r\n        <Shortcut keys={keys} isHtml={isHtml} />\r\n      </KeysContainer>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nShortcutItem.propTypes = {\r\n  action: PropTypes.string.isRequired,\r\n  keys: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ShortcutItem\r\n\r\nconst InfoIcon = styled.i`\r\n  font-size: 13px;\r\n  color: #a4a3a6;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  font-size: 13px;\r\n  color: #a4a3a6;\r\n  margin-top: 3px;\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  color: ${props => (props.isPinned ? \"#ffe6ab\" : \"inherit\")};\r\n  user-select: none;  \r\n  padding-right:20px;\r\n`\r\n\r\nconst PinContainer = styled.div`\r\n  // width: 1%;\r\n  text-align: center;\r\n  padding: 0 13px 0 15px;\r\n  user-select: none;\r\n`\r\n\r\nconst KeysContainer = styled.div`\r\n  padding: 0 13px 0 0;\r\n`\r\n","import React, { useContext } from \"react\" // eslint-disable-line no-unused-vars\r\n\r\nimport ShortcutItem from \"./ShortcutItem\"\r\nimport styled from \"@emotion/styled\"\r\nimport DataContext from \"../../DataContext\"\r\n\r\nimport { upperFirstLetter } from \"../../helpers\"\r\n\r\nexport default function ShortcutList({ title, shortcuts }) {\r\n  const { os } = useContext(DataContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Title>{upperFirstLetter(title)}</Title>\r\n      <Table cellSpacing={0}>\r\n        {shortcuts.map(shortcut => {\r\n          return (\r\n            <ShortcutItem\r\n              key={shortcut._id}\r\n              id={shortcut._id}\r\n              keys={shortcut[os]}\r\n              action={shortcut.action}\r\n              note={shortcut.note}\r\n              pins={shortcut.pins}\r\n              isHtml={shortcut.isHtml}\r\n              isPinned={!!shortcut.isPinned}\r\n            />\r\n          )\r\n        })}\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: inline-block;\r\n  margin-bottom: 40px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n`\r\n\r\nconst Title = styled.header`\r\n  color: #e9e5e5;\r\n  background: #a12d2a;\r\n  padding: 5px 10px 7px 15px;\r\n`\r\n\r\nconst Table = styled.div`\r\n  display: grid;\r\n  grid-gap: 8px 0;\r\n  grid-template-columns: 80px 1fr 1fr;\r\n  padding: 8px 0;\r\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);\r\n  background: #2e2424;\r\n  font-weight: 300;\r\n\r\n  > div {\r\n    border-bottom: solid 1px #453a3a;\r\n    padding-bottom:8px;\r\n  }\r\n`","module.exports = require(\"babel-runtime/helpers/slicedToArray\");"],"mappings":"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","sourceRoot":""}