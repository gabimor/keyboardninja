{"version":3,"file":"main.f5a2c0130886953b2b04.hot-update.js","sources":["webpack:///src/server.js"],"sourcesContent":["/* eslint-disable import/first */\r\nimport React from \"react\" // eslint-disable-line no-unused-vars\r\nimport { StaticRouter } from \"react-router-dom\"\r\nimport { renderToString, renderToNodeStream } from \"react-dom/server\"\r\nimport bodyParser from \"body-parser\"\r\nimport cookieParser from \"cookie-parser\"\r\nimport passport from \"passport\"\r\nimport flash from \"connect-flash\"\r\nimport session from \"express-session\"\r\nimport express from \"express\"\r\nimport compression from \"compression\"\r\nimport dotenv from \"dotenv\"\r\n\r\nconst RedisStore = require(\"connect-redis\")(session)\r\n\r\ndotenv.config()\r\n\r\nimport * as cache from \"./server/cache\"\r\nimport Layout from \"./client/Layout\"\r\nimport DataContext from \"./client/DataContext\"\r\nimport { page, pageStart, pageEnd } from \"./server/page\"\r\nimport \"./server/auth\"\r\nimport api from \"./server/api\"\r\nimport { UserShortcut } from \"./server/models\"\r\n\r\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\r\n\r\nconst app = express()\r\n\r\nconst router = express.Router()\r\n\r\napp.disable(\"x-powered-by\")\r\n\r\napp.use(\r\n  session({\r\n    store: new RedisStore(),\r\n    secret: process.env.SESSION_SECRET,\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: { maxAge: 300000, secure: false },\r\n  })\r\n)\r\n\r\napp.use(compression())\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\napp.use(cookieParser())\r\napp.use(passport.initialize())\r\napp.use(flash())\r\napp.use(passport.session())\r\napp.use(\"/api\", api)\r\napp.use(\"/\", router)\r\n\r\napp.use(express.static(process.env.RAZZLE_PUBLIC_DIR))\r\n\r\napp.get(\"/404\", defaultHandler)\r\n\r\napp.get(\"/:name\", async (req, res, next) => {\r\n  try {\r\n    const appsHash = await cache.getAppsHash()\r\n    const foundApp = appsHash.find(e => e.name === req.params.name)\r\n\r\n    if (!foundApp) return res.redirect(\"/404\")\r\n\r\n    const appId = foundApp.id\r\n\r\n    let app = await cache.getApp(appId)\r\n\r\n    let { os } = req.cookies\r\n    \r\n    if (!os) {\r\n      os = req.headers[\"user-agent\"].toLowerCase().includes(\"win\")\r\n        ? \"win\"\r\n        : \"mac\"\r\n    }\r\n    // if app doesn't support the detected os, switch os to the one that's supported\r\n    if (!app.oss.includes(os)) {\r\n      os = app.oss[0]\r\n    }\r\n\r\n    if (req.query.h) {\r\n      try {\r\n        const userShortcuts = await UserShortcut.findById(req.query.h)\r\n\r\n        // TODO: replace with production solution\r\n        app = JSON.parse(JSON.stringify(app))\r\n\r\n        if (userShortcuts && userShortcuts.appId.toString() === appId) {\r\n          for (const shortcutId of userShortcuts.shortcuts) {\r\n            app.shortcuts.find(\r\n              e => e._id.toString() === shortcutId.toString()\r\n            ).isPinned = true\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(req.path)\r\n        console.log(error.toString())\r\n        // res.redirect(req.path)\r\n      }\r\n    }\r\n\r\n    // if (req.user) {\r\n    //   const userShortcuts = await UserShortcut.findOne({\r\n    //     userId: req.user.id,\r\n    //     appId: app._id,\r\n    //   })\r\n    //   if (userShortcuts) {\r\n    //     for (const shortcutId of userShortcuts.shortcuts) {\r\n    //       app.shortcuts.find(\r\n    //         e => e._id.toString() === shortcutId.toString()\r\n    //       ).isPinned = true\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    const appCategories = await cache.getAppCategories()\r\n    const dataContext = { app, os, appCategories, firstTimeMessage }\r\n\r\n    sendPage(req, res, dataContext)\r\n  } catch (err) {\r\n    next(err)\r\n  }\r\n})\r\n\r\napp.get(\"/\", defaultHandler)\r\n\r\nasync function defaultHandler(req, res, next) {\r\n  try {\r\n    const appCategories = await cache.getAppCategories()\r\n\r\n    const dataContext = {\r\n      appCategories,\r\n      user: req.user,\r\n    }\r\n\r\n    sendPage(req, res, dataContext)\r\n  } catch (err) {\r\n    next(err)\r\n  }\r\n}\r\n\r\napp.use(function errorHandler(err, req, res, next) {\r\n  res.status(500)\r\n  res.send(err.toString() + err.stack)\r\n})\r\n\r\nconst getTemplate = (url, dataContext) => (\r\n  <DataContext.Provider value={dataContext}>\r\n    <StaticRouter context={{}} location={url}>\r\n      <Layout />\r\n    </StaticRouter>\r\n  </DataContext.Provider>\r\n)\r\n\r\nconst sendPage = (req, res, dataContext) => {\r\n  const cacheKey = req.originalUrl + \"-\" + dataContext.os\r\n\r\n  if (!req.user) {\r\n    let cachePage = cache.get(cacheKey)\r\n    if (!cachePage) {\r\n      const markup = renderToString(getTemplate(req.url, dataContext))\r\n      cachePage = page(markup, undefined, assets, dataContext)\r\n      cache.set(cacheKey, cachePage)\r\n    }\r\n    res.status(200).send(cachePage)\r\n  } else {\r\n    res.write(pageStart(undefined, assets, dataContext))\r\n    const stream = renderToNodeStream(getTemplate(req.url, dataContext))\r\n    stream.pipe(\r\n      res,\r\n      { end: \"false\" }\r\n    )\r\n    stream.on(\"end\", () => {\r\n      res.end(pageEnd())\r\n    })\r\n  }\r\n}\r\n\r\nexport default app\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AAFA;AACA;AACA;AAGA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;;;;;AA9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AASA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AACA;AADA;AAgCA;AACA;AAAA;AAjCA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA8BA;AAAA;AACA;AADA;AAIA;AAnCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqCA;AACA;AACA;AACA;AAzCA;AAAA;AAAA;AACA;AADA;AA0DA;AACA;AACA;AACA;AAAA;AA7DA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AA8DA;AACA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkEA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}